{"version":3,"sources":["assets/teoria_grafo.jp2","assets/metodos_numericos.jp2","assets/bf.png","assets/time.png","assets/qt.png","assets/gote.png","assets/custom.jp2","assets/yo.jp2","assets/lil_cat.jp2","assets/resume.pdf","Data/Data.jsx","Cads/Cards.jsx","Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Data","image","tg","title","text","tag","link","check","tags","mn","code","bf","time","qt","gote","Cardses","props","data","map","card","index","Card","style","backgroundColor","debounce","Img","className","src","Body","Title","Text","Button","href","target","variant","size","rel","Footer","idx","key","Cardse","CardColumns","cat","alt","Header","Container","Jumbotron","Row","Col","class","xs","md","lg","width","height","lil_cat","resume","borderColor","colorrText","Image","img5","responsive","App","useState","count","setCount","offset","ButtonGroup","onClick","value","Cards","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ef7bde58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/teoria_grafo.cae77056.jp2\";","module.exports = __webpack_public_path__ + \"static/media/metodos_numericos.6ccf772c.jp2\";","module.exports = __webpack_public_path__ + \"static/media/bf.55b774e0.png\";","module.exports = __webpack_public_path__ + \"static/media/time.99aa5c10.png\";","module.exports = __webpack_public_path__ + \"static/media/qt.76f14dda.png\";","module.exports = __webpack_public_path__ + \"static/media/gote.6ea95d5b.png\";","module.exports = __webpack_public_path__ + \"static/media/custom.3c9e8d42.jp2\";","module.exports = __webpack_public_path__ + \"static/media/yo.309c2315.jp2\";","module.exports = __webpack_public_path__ + \"static/media/lil_cat.803f2856.jp2\";","module.exports = __webpack_public_path__ + \"static/media/resume.5c3d6135.pdf\";","import tg from '../assets/teoria_grafo.jp2'\nimport mn from '../assets/metodos_numericos.jp2'\nimport bf from '../assets/bf.png'\nimport time from '../assets/time.png'\nimport qt from '../assets/qt.png'\nimport gote from '../assets/gote.png'\n\n\n\nconst Data = \n    [\n        [//ingles\n            {\n                image : tg,\n                title : \"Graph visualization\",\n                text : \"\",\n                tag: true,\n                link:\"https://grafosenteoria.herokuapp.com/\",\n                check:\"Echale un vistazo\",\n                tags:[\"Django\",\"SVG\",\"JS \",\"python\"]\n            },\n            {\n                image : mn,\n                title : \"Métodos Numericos\",\n                text : \"\",\n                tag: true,\n                link:\"https://metodos-dos.herokuapp.com/metodos/\",\n                check:\"Echale un vistazo\",\n                tags:[\"Django\",\"SVG\",\"JS\",\"python\",\"Django\",\" SVG\",\"JS\"]\n            },\n\n        ],\n        [//Español\n            {\n                image : tg,\n                title : \"Grafos en Teoría\",\n                text : \"Una aplicación creada para mostrar matrices adyacentes e incidentes de un grafo dirigio o no dirigido , usando D3 , javascript , un backend en Django y numpy para calcular las matrices,esta hosteada en Heroku.\",\n                tag: true,\n                link:\"https://grafosenteoria.herokuapp.com/\",\n                check:\"Echale un vistazo\",\n                tags:[\"Django\",\"SVG\",\"JS\",\"Python\",\"Heroku\"],\n                code:\"https://github.com/yollotltamayo/TG\"\n            },\n            {\n                image : mn,\n                title : \"Métodos Numericos en Django\",\n                text : \" Aplicación web hosteada en heroku, con backend en Django ,que implementa varios metodos numericos tales como: Newton Multivariable,Interpolación de Newton, regla de Simpson, Interpolación Polinómica de Lagrange, entre otras.\",\n                tag: true,\n                link:\"https://metodos-dos.herokuapp.com/metodos/\",\n                check:\"Echale un vistazo\",\n                tags:[\"Django\",\"Python\"],\n                code:\"https://github.com/yollotltamayo/MII\"\n            },\n            {\n                image : bf,\n                title : \"Compilador de Bainf*ck\",\n                text : \" Una app implementada en react.js con componentes de react-bootstrap que compila el lenguaje esoterico brainf*ck , implemento Code Mirror para el editor , y el compilador esta escrito en javascript.\",\n                tag: true,\n                link:\"https://yollotltamayo.github.io/brainf/\",\n                check:\"Echale un vistazo\",\n                tags:[\"React\",\"Code Mirror\",\"JS\",\"React-bootstrap\"],\n                code:\"https://github.com/yollotltamayo/brainf/tree/master/react_apps/brainf-compiler\"\n            },\n            {\n                image : time,\n                title : \"¿Cuanto tiempo para tu cumpleaños?\",\n                text : \" Un proyecto de un día para saber cuanto falta para tu cumpleaños,nunca esta de mas :D , esta implementado en React.js y hostedo en github-pages.\",\n                tag: true,\n                link:\"https://yollotltamayo.github.io/timer/\",\n                check:\"Echale un vistazo\",\n                tags:[\"React\",\"JS\",\"React-bootstrap\"],\n                code:\"https://github.com/yollotltamayo/brainf/tree/master/react_apps/timer\"\n            },\n            {\n                image : qt,\n                title : \"Métodos Numéricos en QT\",\n                text : \" Sistema gráfico para resolver ecuaciones lineales y no lineales  implementado en C++ y QT\",\n                tag: false,\n                tags:[\"QT\",\"C++\"],\n                code:\"https://github.com/yollotltamayo/SM\"\n            },\n            {\n                image : gote,\n                title : \"Stream Movies Bot\",\n                text : \"Un bot para telegram que te dice si una pelicula esta en netlfix ,implementado en GO y postgres, hice uso del modulo selenium en python para recabar una pequeña base de datos de paginas en linea.\",\n                tag: false,\n                tags:[\"GO\",\"Postgres\",\"Python\"],\n                code:\"https://github.com/yollotltamayo/stream_movies_bot\"\n            }\n\n        ]\n    ]\n\n\nexport default Data;\n\n\n","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n//import Card from './CardUI';\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport Data from '../Data/Data'\n//import Col from 'react-bootstrap/Col'\n//import './card-sty\nimport './card-style.css'\nimport Button from 'react-bootstrap/Button'\nimport cat from '../assets/custom.jp2'\nimport LazyLoad from 'react-lazy-load'\nfunction Cardses(props) {\n    const render = (card,index ) => {\n            return (\n                <Card style = {{ backgroundColor : 'white' }}>\n                    <LazyLoad\n                        debounce={false}\n                    >\n                        <Card.Img  className= \"overlay\" src = {card.image}/>\n                    </LazyLoad>\n                    <Card.Body>\n                        <Card.Title className = \" font2\" ><center><h2>{card.title}</h2></center></Card.Title>\n\n                    <Card.Text >\n                        {card.text}\n                    </Card.Text>\n                    {\n                        card.tag === true &&\n                            <center><Button href={card.link} target=\"_blank\"  variant=\"outline-primary\" size=\"lg\">{card.check}!</Button></center>\n                    }\n                    <a  rel=\"noopener noreferrer\" target=\"_blank\" href = {card.code}>\n                        <center><small className=\"text-muted\">Ve el codigo aqui.</small></center>\n                    </a>\n                    \n                    </Card.Body>\n  <Card.Footer className=\"text-muted\">\n      <center>\n        {card.tags.map((variant,idx)=><small  key={idx} className=\"tab text\">{variant}&nbsp;&nbsp;</small>)}\n      </center>\n  </Card.Footer>\n                    \n                </Card>\n\n            );\n    };\n\n    return Data[props.data].map(render)\n\n};\nfunction Cardse(props) {\n    let  eng = \"Checa mi github\"\n    let  esp = \"Check my github\"\n    return(\n        <CardColumns>\n            <Cardses data ={props.data}/>\n            <Card >\n        <Card.Body >\n            <LazyLoad>\n            <a  rel=\"noopener noreferrer\" target=\"_blank\" href = \"https://github.com/yollotltamayo\">\n                <Card.Img  src={cat} alt=\"Card image\"/>\n            </a>\n            </LazyLoad>\n        </Card.Body>\n                <h4>\n                    <a  rel=\"noopener noreferrer\" target=\"_blank\" href = \"https://github.com/yollotltamayo\">\n                        <center><small className=\"text-muted\">{props.data !== 1?esp:eng}</small></center>\n                    </a>\n                </h4>\n        </Card>\n        </CardColumns>\n    )\n}\n            \nexport default Cardse;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport img5 from '../assets/yo.jp2'\nimport lil_cat from '../assets/lil_cat.jp2'\nimport resume from '../assets/resume.pdf'\nimport Button from 'react-bootstrap/Button'\nimport './header-style.css'\nimport LazyLoad from 'react-lazy-load'\nimport Image from 'react-bootstrap/Image'\nconst esp =  \"Mi CV\" \nconst ing  =  \"My resume\"\nfunction Header(props) {\n    return (\n        <Container>\n        <Jumbotron>\n            <Container>\n            <Row className = \"row\">\n                <Col>\n                        <h1 class=\"font2\">Yollotl  Tamayo</h1>  \n                    <div class=\"typewriter\">\n                        <h2 class=\"font\">>In love with \n                        <span class=\"animated\">\n                    </span>\n                    </h2>\n                    </div>\n                    <br></br>\n                    <Container>\n                        <Row xs={3} md={4} lg={9}>\n                            <Col>\n                        <LazyLoad width={100}\n                            height={100}>\n                            <a rel=\"noopener noreferrer\" href = \"https://github.com/yollotltamayo\" target=\"_blank\"><img alt = \"github\"  class = \"img\"src = {lil_cat} /></a>\n                        </LazyLoad>\n                            </Col>\n                            <Col>\n                                <Button size = \"lg\" href ={resume} className = \"font\"  target=\"_blank\"style = {{backgroundColor :'black' ,borderColor: 'black'  ,colorrText:'transparent'}} >{props.data === 1 ?esp : ing}< /Button>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Col>\n                <Col md = \"auto\"> \n                    <div class=\"image-cropper\">\n                        <LazyLoad>\n                            <Image md = \"auto\"src= {img5} alt = \"me\" responsive/>\n                        </LazyLoad>\n                    </div>\n                </Col>\n                </Row>\n            </Container>\n            </Jumbotron>\n        </Container>\n)\n}\nexport default Header;\n","import React, { useState } from 'react';\nimport\"../node_modules/bootstrap/dist/css/bootstrap.min.css\"; \nimport Cardse from  './Cads/Cards';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Header from './Header/Header';\nimport './Cads/card-style.css';\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nfunction App() {\n     const [count, setCount] = useState(1);\n    const PROYECTOS = \"PROYECTOS\";\n    const PROJECTS = \"PROJECTS\";\n    \n  return (\n      <Container>\n\n          <Header data = {count}/>\n        <Row>\n          <Col >\n              <center><h1 class=\"font2\">{count === 1?PROYECTOS:PROJECTS}</h1></center>\n          </Col>\n        </Row>\n        <Row>\n                <Col md={{offset:8}}>\n                    <center> <ButtonGroup className=\"mb-2\">\n<Button variant={count === 1?\"secondary\":\"primary\"} onClick={() => setCount(1)}value={2}>{count === 1 ?\"Español\":\"Cambiar a español\"}</Button>\n<Button variant={count === 0?\"secondary\":\"primary\"} onClick={() => setCount(0)}value={2}>{count === 0 ?\"English\":\"Change to english\"}</Button>\n                    </ButtonGroup></center>\n                </Col>\n        </Row>\n\n    <Container className = \"bg\">\n        <Row>\n            <Col>\n                <Cardse data = {count}/>\n            </Col>\n        </Row>\n    </Container>\n    </Container>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}